cat("\nBartlett's test for", var, ":\n")
print(bartlett_test)
if (sw_test_diabetic$p.value > 0.01 & sw_test_nondiabetic$p.value > 0.01) {
cat("Both groups follow a normal distribution.\n")
if (f_test$p.value > 0.01 && levene_test$p.value && bartlett_test$p.value) {
cat("Variances of both groups are equal.\n")
cat("Performing parametric two-sample t-test...\n")
t_test <- t.test(data[[var]] ~ data$Diabetes_binary, conf.level = 0.99)
print(t_test)
if (t_test$p.value <= 0.01) {
cat("\nReject H0: There is a significant difference in ", var, " between diabetic and non-diabetic groups.\n")
} else {
cat("\nFail to reject H0: There is no significant difference in ", var," between diabetic and non-diabetic groups.\n")
}
} else {
cat("Variances of both groups are not equal.\n")
cat("Performing nonparametric Mann-Whitney U test (Wilcoxon rank sum test)...\n")
wilcox_test <- wilcox.test(as.formula(paste(var, "~ Diabetes_binary")), data = data)
cat("Wilcoxon rank sum test for", var, ":\n")
print(wilcox_test)
if (wilcox_test$p.value <= 0.01) {
cat("\nReject H0: There is a significant difference in ", var, " between diabetic and non-diabetic groups.\n")
} else {
cat("\nFail to reject H0: There is no significant difference in ", var, " between diabetic and non-diabetic groups.\n")
}
}
} else {
cat("At least one group does not follow a normal distribution.\n")
cat("Performing nonparametric Mann-Whitney U test (Wilcoxon rank sum test)...\n")
wilcox_test <- wilcox.test(as.formula(paste(var, "~ Diabetes_binary")), data = data)
cat("Wilcoxon rank sum test for", var, ":\n")
print(wilcox_test)
if (wilcox_test$p.value <= 0.01) {
cat("\nReject H0: There is a significant difference in ", var, " between diabetic and non-diabetic groups.\n")
} else {
cat("\nFail to reject H0: There is no significant difference in ", var, " between diabetic and non-diabetic groups.\n")
}
}
}
for (var in vars_to_test) {
median_diabetic <- median(data[[var]][data$Diabetes_binary == 1])
median_nondiabetic <- median(data[[var]][data$Diabetes_binary == 0])
cat("Median for", var, "in Diabetic group:", median_diabetic, "\n")
cat("Median for", var, "in Non-Diabetic group:", median_nondiabetic, "\n\n")
}
vars_to_plot <- c("BMI", "Age")
par(mfrow = c(1, length(vars_to_plot)))
for (var in vars_to_plot) {
boxplot(data[[var]] ~ data$Diabetes_binary,
xlab = "Diabetes Status",
ylab = var,
main = paste("Boxplot of", var, "by Diabetes Status"),
col = c("lightblue", "lightgreen"),
names = c("Non-Diabetic", "Diabetic"))
}
vars_to_plot <- c("BMI", "Age")
par(mfrow = c(1, length(vars_to_plot)))
for (var in vars_to_plot) {
boxplot(data[[var]] ~ data$Diabetes_binary,
xlab = "Diabetes Status",
ylab = var,
main = paste("Boxplot of", var, "by Diabetes Status"),
col = c("lightblue", "lightgreen"),
names = c("Non-Diabetic", "Diabetic"))
}
vars_to_plot <- c("BMI", "Age")
par(mfrow = c(1, length(vars_to_plot)))
for (var in vars_to_plot) {
boxplot(data[[var]] ~ data$Diabetes_binary,
xlab = "Diabetes Status",
ylab = var,
main = paste("Boxplot of", var, "by Diabetes Status"),
col = c("lightblue", "lightgreen"),
names = c("Non-Diabetic", "Diabetic"))
}
for (var in vars_to_test) {
median_diabetic <- median(data[[var]][data$Diabetes_binary == 1])
median_nondiabetic <- median(data[[var]][data$Diabetes_binary == 0])
cat("Median for", var, "in Diabetic group:", median_diabetic, "\n")
cat("Median for", var, "in Non-Diabetic group:", median_nondiabetic, "\n\n")
}
median_bmi <- median(data$BMI)
print(median_bmi)
mean_bmi <- mean(data$BMI)
print(mean_bmi)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mode_bmi <- Mode(data$BMI)
print(mode_bmi)
standard_deviation <- sd(data$BMI)
print(standard_deviation)
variance <- var(data$BMI)
print(variance)
correlation <- cor(data$Diabetes_binary, data$BMI)
data$Diabetes_binary <- as.numeric(data$Diabetes_binary)
correlation <- cor(data$Diabetes_binary, data$BMI)
print(correlation)
plot(data$Diabetes_binary, data$BMI,
xlab = "Diabetes_binary",
ylab = "BMI",
main = "Korelacija između Diabetes_binary i BMI")
plot(data$Diabetes_binary, data$BMI,
xlab = "Diabetes_binary",
ylab = "BMI",
main = "Korelacija između Diabetes_binary i BMI",
xlim = c(0, 1))
data$Diabetes_binary <- as.numeric(data$Diabetes_binary)
print(data$Diabetes_binary)
data$Diabetes_binary <- as.factor(data$Diabetes_binary)
data$Diabetes_binary <- as.numeric(data$Diabetes_binary)
data$Diabetes_binary <- as.factor(data$Diabetes_binary)
print(data$Diabetes_binary)
plot(data$Diabetes_binary, data$BMI,
xlab = "Diabetes_binary",
ylab = "BMI",
main = "Korelacija između Diabetes_binary i BMI")
correlation <- cor(data$Age, data$BMI)
print(correlation)
plot(data$Diabetes_binary, data$BMI,
xlab = "Age",
ylab = "BMI",
main = "Korelacija između Diabetes_binary i BMI")
plot(data$Age, data$BMI,
xlab = "Age",
ylab = "BMI",
main = "Korelacija između dobi i BMI")
correlation <- cor(data$MentHlth, data$BMI)
print(correlation)
plot(data$MentHlth, data$BMI,
xlab = "MentHlth",
ylab = "BMI",
main = "Korelacija između MentHlth i BMI")
correlation <- cor(data$PhysHlth, data$BMI)
print(correlation)
plot(data$PhysHlth, data$BMI,
xlab = "PhysHlth",
ylab = "BMI",
main = "Korelacija između PhysHlth i BMI")
fit <- lm(data$BMI ~ data$Age_numeric)
abline(fit, col = "red")
fit <- lm(data$BMI ~ data$PhysHlth)
abline(fit, col = "red")
# Deskriptivna statistika - numericka varijabla (BMI)
median_bmi <- median(data$BMI)
print(median_bmi)
mean_bmi <- mean(data$BMI)
print(mean_bmi)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mode_bmi <- Mode(data$BMI)
print(mode_bmi)
standard_deviation <- sd(data$BMI)
print(standard_deviation)
variance <- var(data$BMI)
print(variance)
# Deskriptivna statistika - numericka varijabla (BMI)
median_bmi <- median(data$BMI)
print(median_bmi)
mean_bmi <- mean(data$BMI)
print(mean_bmi)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mode_bmi <- Mode(data$BMI)
print(mode_bmi)
standard_deviation <- sd(data$BMI)
print(standard_deviation)
variance <- var(data$BMI)
# Deskriptivna statistika - numericka varijabla (BMI)
median_bmi <- median(data$BMI)
print(median_bmi)
mean_bmi <- mean(data$BMI)
print(mean_bmi)
standard_deviation <- sd(data$BMI)
print(standard_deviation)
variance <- var(data$BMI)
print(variance)
quantiles <- quantile(data$BMI, probs = c(0.25, 0.5, 0.75))
print(quantiles)
correlation <- cor(data$PhysHlth, data$BMI)
print(correlation)
plot(data$PhysHlth, data$BMI,
xlab = "PhysHlth",
ylab = "BMI",
main = "Korelacija između PhysHlth i BMI")
fit <- lm(data$BMI ~ data$PhysHlth)
abline(fit, col = "red")
# Deskriptivna statistika - numericka varijabla (BMI)
median_bmi <- median(data$BMI)
print(median_bmi)
mean_bmi <- mean(data$BMI)
print(mean_bmi)
standard_deviation <- sd(data$BMI)
print(standard_deviation)
variance <- var(data$BMI)
print(variance)
quantiles <- quantile(data$BMI, probs = c(0.25, 0.5, 0.75))
print(quantiles)
correlation <- cor(data$PhysHlth, data$BMI)
print(correlation)
plot(data$PhysHlth, data$BMI,
xlab = "PhysHlth",
ylab = "BMI",
main = "Korelacija između PhysHlth i BMI")
fit <- lm(data$BMI ~ data$PhysHlth)
abline(fit, col = "red")
promatranja <- table(data$Sex)
pie(promatranja, labels = c("Žene", "Muškarci"), main = "Raspodjela spola")
promatranja <- table(data$Diabetes_binary)
pie(promatranja, labels = c("Nema dijabetes", "Ima dijabetes"), main = "Raspodjela dijabetes")
promatranja <- table(data$HighChol)
pie(promatranja, labels = c("Visok kolesterol", "Nizak kolesterol"), main = "Raspodjela po kolesterolu")
promatranja <- table(data$Age)
pie(promatranja, labels = c("Visok kolesterol", "Nizak kolesterol"), main = "Raspodjela po dobi")
promatranja <- table(data$Age)
pie(promatranja, labels = c("18-24", "25-29", "30-34", "35-39", "40-44",
"45-49", "50-54", "55-59", "60-64", "65-69",
"70-74", "75-79", "80+ godina"),
main = "Raspodjela po dobi")
# Deskriptivna statistika - kvalitativne
promatranja <- table(data$Diabetes_binary)
pie(promatranja, labels = c("Nema dijabetes", "Ima dijabetes"), main = "Raspodjela po dijabetesu")
promatranja <- table(data$Sex)
pie(promatranja, labels = c("Žene", "Muškarci"), main = "Raspodjela spola")
promatranja <- table(data$HighChol)
pie(promatranja, labels = c("Visok kolesterol", "Nizak kolesterol"), main = "Raspodjela po kolesterolu")
promatranja <- table(data$Age)
pie(promatranja, labels = c("18-24", "25-29", "30-34", "35-39", "40-44",
"45-49", "50-54", "55-59", "60-64", "65-69",
"70-74", "75-79", "80+ godina"),
main = "Raspodjela po dobi")
promatranja <- table(data$Education)
pie(promatranja, labels = c("Samo vrtić", "Osnovna", "Nešto srednje škole",
"Srednja škola", "Fakultet 1-3 godine",
"Fakultet 4 godine ili više"),
main = "Raspodjela po edukaciji")
promatranja <- table(data$Age)
pie(promatranja, labels = c("18-24", "25-29", "30-34", "35-39", "40-44",
"45-49", "50-54", "55-59", "60-64", "65-69",
"70-74", "75-79", "80+ godina"),
main = "Raspodjela po dobi")
promatranja <- table(data$Education)
pie(promatranja, labels = c("Samo vrtić", "Osnovna", "Nešto srednje škole",
"Srednja škola", "Fakultet 1-3 godine",
"Fakultet 4 godine ili više"),
main = "Raspodjela po edukaciji")
promatranja <- table(data$Income)
pie(promatranja, labels = c("Manje od 10.000 dolara", "10.000-15.000 dolara", "15.000-20.000 dolara", "20.000-25.000", "25.000-35.000", "35.000-50.000", "50.000-75.000", "75.000 ili više dolara"), main = "Raspodjela po zaradi")
# Deskriptivna statistika - numericka varijabla (BMI)
median_bmi <- median(data$BMI)
print(median_bmi)
mean_bmi <- mean(data$BMI)
print(mean_bmi)
standard_deviation <- sd(data$BMI)
print(standard_deviation)
variance <- var(data$BMI)
print(variance)
quantiles <- quantile(data$BMI, probs = c(0.25, 0.5, 0.75))
print(quantiles)
correlation <- cor(data$PhysHlth, data$BMI)
print(correlation)
plot(data$PhysHlth, data$BMI,
xlab = "PhysHlth",
ylab = "BMI",
main = "Korelacija između PhysHlth i BMI")
fit <- lm(data$BMI ~ data$PhysHlth)
abline(fit, col = "red")
# dodatna deskriptivna statistika
summary(dat)
# dodatna deskriptivna statistika
summary(data)
library(pastecs)
stat.desc(data)
library("RcmdrMisc")
Ucenici=read.delim(file.choose(),header=T,sep="\t")
attach (Ucenici)
Spol<-as.factor(Spol)
normalityTest(Vrijeme ~ Spol, test="shapiro.test")
View(Ucenici)
tapply(Vrijeme, Spol,  var)
var.test(Vrijeme ~ Spol, alternative='two.sided', conf.level=.95)
bartlett.test(Vrijeme ~ Spol)
leveneTest(Vrijeme, Spol, center=mean)
t.test(Vrijeme~Spol, alternative='two.sided', conf.level=.95,
var.equal=TRUE)
## Provedba Wilcoxonova testa
tapply(Vrijeme, Spol, median)
wilcox.test(Vrijeme ~ Spol, alternative="two.sided")
Sredina<-as.factor(Sredina)
install.packages("ggplot2")
install.packages("dplyr")
install.packages("psych")
install.packages("reshape2")
install.packages("car")
install.packages("MASS")
library(ggplot2)
library(dplyr)
library(psych)
library(reshape2)
library(car)
library(MASS)
dijamant = read.csv("diamonds.csv", sep = ",")
dijamant$cut = as.factor(dijamant$cut)
dijamant$color = as.factor(dijamant$color)
dijamant$clarity = as.factor(dijamant$clarity)
attach(dijamant)
summary(dijamant)
describe(dijamant)
remove.packages("ggplot2")
remove.packages("dplyr")
remove.packages("psych")
remove.packages("reshape2")
remove.packages("car")
remove.packages("MASS")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("psych")
install.packages("reshape2")
install.packages("car")
install.packages("MASS")
library(ggplot2)
library(dplyr)
library(psych)
library(reshape2)
library(car)
library(MASS)
dijamant = read.csv("diamonds.csv", sep = ",")
dijamant$cut = as.factor(dijamant$cut)
dijamant$color = as.factor(dijamant$color)
dijamant$clarity = as.factor(dijamant$clarity)
attach(dijamant)
summary(dijamant)
describe(dijamant)
numeric_vars <- c("price", "carat", "x", "y", "z", "depth", "table")
par(mfrow = c(2, 2))
for (var in numeric_vars) {
hist(dijamant[[var]], main = paste("Histogram za", var), xlab = var, col = "skyblue")
}
categorical_vars <- c("cut", "color", "clarity")
par(mfrow = c(1, 1))
for (var in categorical_vars) {
p <- ggplot(dijamant, aes_string(x = var)) +
geom_bar(fill = "skyblue") +
ggtitle(paste("Barplot za", var)) +
xlab(var) +
ylab("Ukupno") +
theme_minimal()
print(p)
}
numeric_vars <- dijamant %>% select(price, carat, x, y, z, depth, table)
predicted <- predict(model3, newdata = test, type = "response")
data <- read.csv(file.choose())
data$Diabetes_binary <- as.factor(data$Diabetes_binary)
numeric_vars <- data %>%
select(BMI, Income, HighBP, GenHlth, Diabetes_binary)
if (!require("dplyr")) install.packages("dplyr")
library(ggplot2)
library(corrplot)
data <- read.csv(file.choose())
data$Diabetes_binary <- as.factor(data$Diabetes_binary)
numeric_vars <- data %>%
select(BMI, Income, HighBP, GenHlth, Diabetes_binary)
colnames(numeric_vars)
table(data$Diabetes_binary)
correlation_matrix <- cor(numeric_vars, use = "complete.obs")
if (!require("dplyr")) install.packages("dplyr")
library(ggplot2)
library(corrplot)
data <- read.csv(file.choose())
numeric_vars <- data %>%
select(BMI, Income, HighBP, GenHlth, Diabetes_binary)
colnames(numeric_vars)
table(data$Diabetes_binary)
correlation_matrix <- cor(numeric_vars, use = "complete.obs")
print(correlation_matrix)
corrplot(correlation_matrix, method = "circle")
pairs(numeric_vars, col = data$Diabetes_binary)
numeric_vars <- data %>%
select(BMI, Diabetes_binary)
colnames(numeric_vars)
table(data$Diabetes_binary)
correlation_matrix <- cor(numeric_vars, use = "complete.obs")
print(correlation_matrix)
corrplot(correlation_matrix, method = "circle")
pairs(numeric_vars, col = data$Diabetes_binary)
numeric_vars <- data %>%
select(BMI, Income, HighBP, GenHlth)
pairs(numeric_vars, col = data$Diabetes_binary)
numeric_vars <- data %>%
select(BMI, Income, HighBP, GenHlth, Diabetes_binary)
colnames(numeric_vars)
table(data$Diabetes_binary)
correlation_matrix <- cor(numeric_vars, use = "complete.obs")
print(correlation_matrix)
corrplot(correlation_matrix, method = "circle")
pairs(numeric_vars, col = data$Diabetes_binary)
model <- glm(Diabetes_binary ~ ., data = data, family = binomial)
summary(model)
model <- glm(Diabetes_binary ~ BMI, Income, HighBP, GenHlth, data = data, family = binomial)
model <- glm(Diabetes_binary ~ BMI + Income + HighBP + GenHlth, data = data, family = binomial)
summary(model)
anova(model, test = "Chisq")
summary(model)$coefficients
coef <- summary(model)$coefficients
odds_ratios <- exp(coef[, "Estimate"])
confidence_intervals <- exp(confint(model))
data.frame(Odds_Ratios = odds_ratios, Lower_CI = confidence_intervals[, 1], Upper_CI = confidence_intervals[, 2])
pred <- predict(model, type = "response")
pred_class <- ifelse(pred > 0.5, 1, 0)
confusionMatrix(factor(pred_class), data$Diabetes_binary)
if (!require("caret")) install.packages("caret")
library(caret)
confusionMatrix(factor(pred_class), data$Diabetes_binary)
data$Diabetes_binary <- as.factor(data$Diabetes_binary)
data$Income <- as.factor(data$Income)
data$HighBP <- as.factor(data$HighBP)
data$GenHlth <- as.factor(data$GenHlth)
model <- glm(Diabetes_binary ~ BMI + Income + HighBP + GenHlth, data = data, family = binomial)
summary(model)
data$Diabetes_binary <- as.factor(data$Diabetes_binary)
data$Income <- as.factor(data$Income)
data$HighBP <- as.factor(data$HighBP)
data$GenHlth <- as.factor(data$GenHlth)
xtabs(~ Diabetes_binary + Income + HighBP + GenHlth, data = data)
pairs(~ BMI + Income + HighBP + GenHlth + Diabetes_binary, main = "Dijagram raspršenja", data = data)
#data$Diabetes_binary <- as.factor(data$Diabetes_binary)
#data$Income <- as.factor(data$Income)
#data$HighBP <- as.factor(data$HighBP)
#data$GenHlth <- as.factor(data$GenHlth)
model <- glm(Diabetes_binary ~ BMI + Income + HighBP + GenHlth, data = data, family = binomial)
summary(model)
data$Diabetes_binary <- as.factor(data$Diabetes_binary)
data$Income <- as.factor(data$Income)
data$HighBP <- as.factor(data$HighBP)
data$GenHlth <- as.factor(data$GenHlth)
model <- glm(Diabetes_binary ~ BMI + Income + HighBP + GenHlth, data = data, family = binomial)
summary(model)
exp(model$coefficients)
exp(confint(model))
# testna statistika
ModelChi = model$null.deviance - model$deviance
ModelChi
# broj stupnjeva slobode
ChiDf = model$df.null - model$df.residual
ChiDf
# p-vrijednost
ChisqProb = 1 - pchisq(ModelChi, ChiDf)
ChisqProb
data$Diabetes_binary <- as.factor(data$Diabetes_binary)
data$Income <- as.factor(data$Income)
data$HighBP <- as.factor(data$HighBP)
data$GenHlth <- as.factor(data$GenHlth)
library(rsample)
data$Diabetes_binary <- as.factor(data$Diabetes_binary)
data$Income <- as.factor(data$Income)
data$HighBP <- as.factor(data$HighBP)
data$GenHlth <- as.factor(data$GenHlth)
if (!require("rsample")) install.packages("rsample")
library(rsample)
skup <- data %>%
select(HighBP, GenHlth, Income, BMI)
set.seed(1)
split = initial_split(skup, prop = 0.7, strata = Diabetes_binary)
data$Diabetes_binary <- as.factor(data$Diabetes_binary)
data$Income <- as.factor(data$Income)
data$HighBP <- as.factor(data$HighBP)
data$GenHlth <- as.factor(data$GenHlth)
if (!require("rsample")) install.packages("rsample")
library(rsample)
skup <- data %>%
select(HighBP, GenHlth, Income, BMI)
set.seed(1)
split = initial_split(skup, prop = 0.7, strata = data$Diabetes_binary)
data$Diabetes_binary <- as.factor(data$Diabetes_binary)
data$Income <- as.factor(data$Income)
data$HighBP <- as.factor(data$HighBP)
data$GenHlth <- as.factor(data$GenHlth)
if (!require("rsample")) install.packages("rsample")
library(rsample)
skup <- data %>%
select(Diabetes_binary, HighBP, GenHlth, Income, BMI)
set.seed(1)
split = initial_split(skup, prop = 0.7, strata = Diabetes_binary)
train = split %>%
training()
test = split %>%
testing()
attach(train)
summary(train)
library(psych)
describe(train)
model <- glm(Diabetes_binary ~ BMI + Income + HighBP + GenHlth, data = train, family = binomial)
summary(model)
exp(model$coefficients)
exp(confint(model))
# testna statistika
ModelChi = model$null.deviance - model$deviance
ModelChi
# broj stupnjeva slobode
ChiDf = model$df.null - model$df.residual
ChiDf
# p-vrijednost
ChisqProb = 1 - pchisq(ModelChi, ChiDf)
ChisqProb
setwd("C:/Users/Korisnik/FOI/4.god/2.sem/MIDAP/diabetes-health-indicators-analysis/analysis")
rmarkdown::render("regresija.Rmd")
rmarkdown::render("regresija.Rmd")
